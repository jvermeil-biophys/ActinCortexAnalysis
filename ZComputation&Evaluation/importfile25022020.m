function [VarName2, Area1, StdDev1, XM, YM, Slice] = importfile(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [VARNAME2, AREA1, STDDEV1, XM, YM, SLICE] = IMPORTFILE(FILENAME)
%  reads data from text file FILENAME for the default selection.
%  Returns the data as column vectors.
%
%  [VARNAME2, AREA1, STDDEV1, XM, YM, SLICE] = IMPORTFILE(FILE,
%  DATALINES) reads data for the specified row interval(s) of text file
%  FILENAME. Specify DATALINES as a positive scalar integer or a N-by-2
%  array of positive scalar integers for dis-contiguous row intervals.
%
%  Example:
%  [VarName2, Area1, StdDev1, XM, YM, Slice] = importfile("D:\Data\Raw\20.02.25\20Up200ms63X-1_Flip_Results.txt", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 25-Feb-2020 18:07:44

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 6);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["VarName2", "Area1", "StdDev1", "XM", "YM", "Slice"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
VarName2 = tbl.VarName2;
Area1 = tbl.Area1;
StdDev1 = tbl.StdDev1;
XM = tbl.XM;
YM = tbl.YM;
Slice = tbl.Slice;
end