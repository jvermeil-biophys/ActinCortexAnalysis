function [VarName1, Area, StdDev, XM, YM, Slice] = importfileDeptho2905(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [VARNAME1, AREA, STDDEV, XM, YM, SLICE] = IMPORTFILE(FILENAME) reads
%  data from text file FILENAME for the default selection.  Returns the
%  data as column vectors.
%
%  [VARNAME1, AREA, STDDEV, XM, YM, SLICE] = IMPORTFILE(FILE, DATALINES)
%  reads data for the specified row interval(s) of text file FILENAME.
%  Specify DATALINES as a positive scalar integer or a N-by-2 array of
%  positive scalar integers for dis-contiguous row intervals.
%
%  Example:
%  [VarName1, Area, StdDev, XM, YM, Slice] = importfile("D:\Data\Raw\20.05.29\29-05-20_DepthoMy1_1-1_Results.txt", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 02-Jun-2020 17:33:39

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Setup the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 6);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["VarName1", "Area", "StdDev", "XM", "YM", "Slice"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
VarName1 = tbl.VarName1;
Area = tbl.Area;
StdDev = tbl.StdDev;
XM = tbl.XM;
YM = tbl.YM;
Slice = tbl.Slice;
end